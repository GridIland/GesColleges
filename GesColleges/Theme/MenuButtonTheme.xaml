<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type RadioButton}" x:Key="MenuButtonTheme">
        <Style.Setters>
            <Setter Property="Foreground" Value="Black"/>   
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{TemplateBinding Background}">
                            <TextBlock Text="{TemplateBinding Property=Content }" VerticalAlignment="Center" Margin="50,0,0,0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Gray"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#79D3EB"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="ButtonTheme">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#4B93EB"/>
            </Trigger>
        </Style.Triggers>

        <Style.Setters>
            <Setter Property="TextElement.FontFamily" Value="Fonts/#Dosis"/>
            <Setter Property="Background" Value="#02c0fa"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bd" Width="100" Height="25"
                                CornerRadius="12"
                                Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                              HorizontalAlignment="Center"/>
                    </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="Tag" Value="Impr"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="bd" Property="Border.Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,2">
                                            <GradientStop Color="Red" Offset="1"/>
                                            <GradientStop Color="DarkRed" Offset="0.0"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="HomeButton">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#4B93EB"/>
            </Trigger>
        </Style.Triggers>

        <Style.Setters>
            <Setter Property="TextElement.FontFamily" Value="Fonts/#Dosis"/>
            <Setter Property="Background" Value="#02c0fa"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="bd"
                                CornerRadius="12"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center"
                                              HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Border.Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,2">
                                            <GradientStop Color="#BEEBE7" Offset="0.0"/>
                                            <GradientStop Color="White" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="Tag" Value="color1"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="bd" Property="Border.Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,2">
                                            <GradientStop Color="Blue" Offset="1"/>
                                            <GradientStop Color= "DarkBlue" Offset="0.0"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="Tag" Value="color2"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="bd" Property="Border.Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,2">
                                            <GradientStop Color="DarkBlue" Offset="1"/>
                                            <GradientStop Color= "OrangeRed" Offset="0.0"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="Tag" Value="color3"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="bd" Property="Border.Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,2">
                                            <GradientStop Color="OrangeRed" Offset="1"/>
                                            <GradientStop Color= "Red" Offset="0.0"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
</ResourceDictionary>